listeners:
  client:
    containerPort: 9092
    protocol: SASL_PLAINTEXT
    name: CLIENT
    sslClientAuth: "none"
  controller:
    name: CONTROLLER
    containerPort: 9093
    protocol: SASL_PLAINTEXT
    sslClientAuth: "none"
  interbroker:
    containerPort: 9094
    protocol: SASL_PLAINTEXT
    name: INTERNAL
    sslClientAuth: "none"
  external:
    containerPort: 9095
    protocol: SASL_PLAINTEXT
    name: EXTERNAL
    sslClientAuth: "none"
  extraListeners: []
  overrideListeners: ""
  advertisedListeners: ""
  securityProtocolMap: ""

sasl:
  enabledMechanisms: PLAIN
  interBrokerMechanism: PLAIN
  controllerMechanism: PLAIN
  oauthbearer:
    tokenEndpointUrl: ""
    jwksEndpointUrl: ""
    expectedAudience: ""
    subClaimName: "sub"
  interbroker:
    user: inter_broker_user
    password: "admin"
    clientId: inter_broker_client
    clientSecret: ""
  controller:
    user: controller_user
    password: "admin"
    clientId: controller_broker_client
    clientSecret: ""
  client:
    users:
      - admin
    passwords: "admin"

controller:
  replicaCount: 2
  automountServiceAccountToken: true

service:
  type: ClusterIP
  ports:
    client: 9092
    controller: 9093
    interbroker: 9094
    external: 9095
  extraPorts: []
  nodePorts:
    client: ""
    external: ""
  sessionAffinity: None
  sessionAffinityConfig: {}
  clusterIP: ""
  loadBalancerIP: ""
  loadBalancerClass: ""
  loadBalancerSourceRanges: []
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  annotations: {}
  headless:
    controller:
      annotations: {}
      labels: {}
    broker:
      annotations: {}
      labels: {}

externalAccess:
  enabled: true  # Enable external access
  autoDiscovery:
    enabled: true  # Enable auto-discovery for external IPs

  controller:
    forceExpose: true  # Force expose controller externally
    service:
      type: LoadBalancer  # Use LoadBalancer for external access
      ports:
        external: 9095  # External port for Kafka
      loadBalancerClass: ""
      loadBalancerIPs: []
      loadBalancerNames: []
      loadBalancerAnnotations:
        networking.gke.io/load-balancer-type: "External"  # GKE-specific annotation for external LoadBalancer
      loadBalancerSourceRanges:
        - 0.0.0.0/0  # Allow traffic from all IPs (restrict this for production)
      allocateLoadBalancerNodePorts: true
      nodePorts: []
      externalIPs: []
      useHostIPs: false
      usePodIPs: false
      domain: ""
      publishNotReadyAddresses: false
      labels: {}
      annotations: {}
      extraPorts: []
  broker:
    service:
      type: LoadBalancer  # Use LoadBalancer for external access
      ports:
        external: 9095  # External port for Kafka
      loadBalancerClass: ""
      loadBalancerIPs: []
      loadBalancerNames: []
      loadBalancerAnnotations:
        networking.gke.io/load-balancer-type: "External"  # GKE-specific annotation for external LoadBalancer
      loadBalancerSourceRanges:
        - 0.0.0.0/0  # Allow traffic from all IPs (restrict this for production)
      allocateLoadBalancerNodePorts: true
      nodePorts: []
      externalIPs: []
      useHostIPs: false
      usePodIPs: false
      domain: ""
      publishNotReadyAddresses: false
      labels: {}
      annotations: {}
      extraPorts: []

rbac:
  create: true

kraft:
  enabled: true
